yeoman--脚手架----学习慕课网的--Grunt_Beginner-里面有详细介绍
cnpm install -g yo    安装yeoman
yo --version         查看yeoman版本  2.0.0

然后进yeoman官网下载项目生成器    -- http://yeoman.io/generators/
直接搜索react
选择基于webpack的（即：react-webpack）
点击进入即可，下面会有怎么install

cnpm install -g generator-react-webpack@1.2.11
如何查看generator-react-webpack的版本信息
npm ls -g --depth=1 2>/dev/null | grep generator-                     （解释下该句意思：npm ls -g 列出我们全局安装的npm包；因为npm包往往会依赖其他的包，
																		所以往往会是一个树状结构的展现，一层一层会比较难以查找，
																		所以我们这里通过--depth=1来限制树状结构展示最多往下一层；
																		2>/dev/null  其中>表示重定向，1表示标准输出、2表示标准错误，/dev/null代表空设备文件，
																		所以他表示的意思就是：如果执行npm list -g的过程当中有错误消息，把错误消息重定向到我们的空设备文件上，
																		就是在输出中过滤掉错误消息（不加的话往往会出现一些错误信息，这也是NPM做的不好的一点，往往会missing一些依赖）；
																		|表示通道，用来将上一个命令的输出内容作为下一个命令的输入内容；
																		grep generator- 在前面的输出结果中检索‘generator-’关键字开头的内容）
在windows系统下会报错，【grep是Linux里面的命令，因此需要linux环境，windows可以用Git bash，gitbash里有MinGW,可以执行执行一些linux命令】
详细见：React学习实例总结，包含yeoman安装、webpack构建
http://www.cnblogs.com/eyunhua/p/6426490.html
yeoman简单环境搭建--http://blog.csdn.net/esther_heesch/article/details/52972767


安装git Bash 依照百度提供的方法有选择的安装

登录GitHub ---New repository
写名字gallery-by-react  介绍随便写  选择最宽泛的MIT LICENSE
 
在指定文件夹右键打开 Git Bash
git clone https://github.com/BrightMoonSong/gallery-by-react.git

进入我们这个的项目目录   cd gallery-by-react
这时我们发现控制台出现 master字样
此时我们运行 yo react-webpack gallery-by-react(利用react-webpack generator来生成我们的项目，gallery-by-react就是我们的项目名字)
此时会遇到一个windows中的git bash的一个坑，无法上下选择，弃用
打开cmd输入yo react-webpack gallery-by-react回车，选择配置
SASS
enable postcss 启用postcss  我选择了N


打开文件
node_modules      项目编译所需node组件所在的包
src               源代码所在目录
test              测试代码所在目录
.editorconfig     用来统一不同的编辑器ide的编码风格（这是配置文件，官网editorconfig.org,可以看下他支持的编辑器）
.eslintrc         （lintrc、hintrc）代码风格检测工具（默认包含jshintrc所有规则，并且包含jsx）
.jshintrc		  
.gitignore		  
.yo-rc.json       yeoman的配置文件，用来记录当前项目的一些信息
karma.conf.js     karma测试框架的配置文件
LICENSE           协议文件，生成githup项目的时候我们生成的是MIT License
package.json      node项目的配置文件，声明当前项目的一些信息，都依赖了那些NPM包的
Gruntfile.js        Grunt自动化编译工具的配置文件
webpack.config.js     webpack开发环境配置文件
webpack.dist.config.js webpack生产环境配置文件

发现grunt不是内部命令
cnpm install -g grunt-cli
发现file-loader加载失败
cnpm install --save-dev file-loader



npm安装模块

【npm install xxx】利用 npm 安装xxx模块到当前命令行所在目录；
【npm install -g xxx】利用npm安装全局模块xxx；
本地安装时将模块写入package.json中：

【npm install xxx】安装但不写入package.json；
【npm install xxx –save】 安装并写入package.json的”dependencies”中；
【npm install xxx –save-dev】安装并写入package.json的”devDependencies”中。
npm 删除模块

【npm uninstall xxx】删除xxx模块； 
【npm uninstall -g xxx】删除全局模块xxx；


react遵循commonJS规范
每个js文件或者css文件都是一个模块
可以通过require引入
他们内部的函数和类等都是其私有的，对其他文件（函数）都是不可见的
想让其他文件看见需要--module.exports暴露出去


webpack 配置文件中的个别函数的意思
resolve -->模块解析配置项
extensions --->